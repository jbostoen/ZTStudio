<?xml version="1.0"?>
<doc>
<assembly>
<name>
ZT Studio
</name>
</assembly>
<members>
<member name="T:ZTStudio.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.icon_file">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.icon_folder">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.icon_ZT1_Graphic">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ZTStudio.My.Resources.Resources.icon_ZT1_palette">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="T:ZTStudio.ClsAniFile">
 <summary>
 ClsAniFile manages information about the .ani file.
 This file contains info about offsets.
 </summary>
</member>
<member name="P:ZTStudio.ClsAniFile.X0">
 <summary>
 Offset (X) of top left pixel
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsAniFile.X1">
 <summary>
 Offset (X) of bottom right pixel
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsAniFile.Y0">
 <summary>
 Offset (Y) of top left pixel
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsAniFile.Y1">
 <summary>
 Offset (Y) of bottom right pixel
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsAniFile.RelativeDirectories">
 <summary>
 List of directories (tree structure) relative to root
 </summary>
 <returns></returns>
</member>
<member name="P:ZTStudio.ClsAniFile.Views">
 <summary>
 List of all views 
 </summary>
 <returns></returns>
</member>
<member name="P:ZTStudio.ClsAniFile.FileName">
 <summary>
 Filename of the .ani file
 </summary>
 <returns>String</returns>
</member>
<member name="M:ZTStudio.ClsAniFile.Write(System.String)">
 <summary>
 Writes a .ani file, based on the info in this object
 </summary>
 <param name="strFileName">Destination filename</param>
 <returns></returns>
</member>
<member name="M:ZTStudio.ClsAniFile.CreateAniConfig(System.String)">
 <summary>
 This sub tries to create a .ani-file. It does so based on the offsets of graphics it detects.
 This is experimental, but it should work for the majority of graphics.
 </summary>
 <param name="StrFileName">Destination filename</param>
</member>
<member name="T:ZTStudio.ClsDrawingInstr">
 <summary>
 <para>ClsDrawingInstr is used to manage a drawing instruction.</para>
 <para>The instruction specifies which colors to draw, from left to right.</para>
 <para>This typically consists of an offset (how many transparent pixels are there before drawing starts? Could be 0) followed by one or more references to colors.</para>
 <para>The references to colors are made using their index number in the color palette.</para>
 </summary>
</member>
<member name="P:ZTStudio.ClsDrawingInstr.Offset">
 <summary>
 Offset. This determines how many pixels to skip horizontally (from left to right) before actually starting to draw colored pixels.
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsDrawingInstr.PixelColors">
 <summary>
 A list of color references. These colors will be drawn horizontally (from left to right), after the offset has been applied.
 The colors are referenced by their index number in the palette.
 </summary>
 <returns>List(Of Integer) - color references</returns>
</member>
<member name="M:ZTStudio.ClsDrawingInstr.GetHex">
 <summary>
 Returns the hex form of this drawing instruction.
 It consist of the offset (X2), the number of colored pixels (X2) and finally the index numbers of each color (X2 per color).
 </summary>
 <returns>List(Of String)</returns>
</member>
<member name="T:ZTStudio.ClsFrame">
 <summary>
 <para>ClsFrame is an object to handle a ZT1 Frame.</para>
 <para>A frame is one still picture of view of an animation.</para>
 </summary>
 <remarks>
 It contains some properties such as width, height, offset; as well as a series of drawing instructions.
 In 2019, there are still two "mystery bytes" of which the function is still unknown.
 It's assumed the purpose of all other bytes has been discovered.
 </remarks>
</member>
<member name="M:ZTStudio.ClsFrame.#ctor(ZTStudio.ClsGraphic)">
 <summary>
 New frame object has been created.
 </summary>
 <param name="myParent">ClsGraphic - the graphic (view) of which this frame is part</param>
</member>
<member name="P:ZTStudio.ClsFrame.CoreImageHex">
 <summary>
 Hex values for this ZT1 frame (if set)
 </summary>
 <returns>List(Of String)</returns>
</member>
<member name="P:ZTStudio.ClsFrame.CoreImageBitmap">
 <summary>
 Image bitmap (if set)
 </summary>
 <returns>Bitmap</returns>
</member>
<member name="P:ZTStudio.ClsFrame.Parent">
 <summary>
 Parent graphic of this ZT1 frame
 </summary>
 <returns>ClsGraphic</returns>
</member>
<member name="P:ZTStudio.ClsFrame.OffsetX">
 <summary>
 Horizontal offset (X) of this frame.
 How much should the image be moved to the left (+)/right (-), compared to the center of the square? (center is based on ZT1's cFootPrintX and cFootPrintY settings)
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsFrame.OffsetY">
 <summary>
 Vertical offset (Y) of this frame.
 How much should the image be moved to the top (+)/bottom (-), compared to the center of the square? (center is based on ZT1's cFootPrintX and cFootPrintY settings)
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:ZTStudio.ClsFrame.LastUpdated">
 <summary>
 Timestamp of last update. Used to see if re-rendering the frame is needed.
 </summary>
 <returns>Timestamp</returns>
</member>
<member name="P:ZTStudio.ClsFrame.MysteryHEX">
 <summary>
 <para>Mystery bytes/hex is the term used in this project to refer to two bytes present in the hex values of each frame.</para>
 <para>Until now (16th of August 2019), the purpose of these 2 bytes is unknown. It's not been discovered yet if they have any purpose in the game.</para>
 </summary>
 <remarks>
 Are they:
 - another counter?
 - another integrity check?
 - a signature?
 - some value used in the program used by Blue Fang/Rapan Animation Studio (Rapan LLC. Sofia) to create the graphics?
 - ...
 
 If anyone ever finds out, please let me know!
 </remarks>
 <returns>List(Of String)</returns>
</member>
<member name="M:ZTStudio.ClsFrame.NotifyPropertyChanged(System.String)">
 <summary>
 This sub is used to inform the object that an important property has changed.
 By calling this sub, the LastUpdated property will be set.
 </summary>
</member>
<member name="M:ZTStudio.ClsFrame.GetCoreImageBitmap">
 <summary>
 <para>Returns the core bitmap image.</para>
 <para>If the ZT1 Graphic has been rendered (CoreImageBitmap is set), it returns this cached version.</para>
 <para>If the ZT1 Graphic hasn't been rendered yet, it renders the ZT1 Graphic from the hex values.</para>
 </summary>
 <returns>Bitmap</returns>
</member>
<member name="M:ZTStudio.ClsFrame.GetCoreImageBitmapOnTransparentCanvas(System.Boolean)">
 <summary>
 Returns the image bitmap, on a transparent canvas.
 </summary>
 <remarks>
 Todo: this needs more documentation. Take the time again to see how blnDrawInCenter works.
 </remarks>
 <param name="BlnDrawInCenter">Boolean</param>
 <returns>Bitmap</returns>
</member>
<member name="M:ZTStudio.ClsFrame.GetImage(System.Boolean,System.Boolean)">
 <summary>
 <para>Returns a bitmap image for this frame.</para>
 <para>If a background frame within this graphic exists, it will also be rendered if enabled. (for example: Restaurant)</para>
 <para>If a background graphic has been set, it will also be rendered if enabled. (for example: Orang Utan toy)</para>
 </summary>
 <param name="BlnDrawGrid">Add grid. Defaults to false.</param>
 <param name="BlnCentered"></param>
 <returns>Bitmap</returns>
</member>
<member name="M:ZTStudio.ClsFrame.RenderCoreImageFromHex">
 <summary>
 <para>Renders the core image of this frame (without grid, offsets etc.) as a bitmap, based on the supplied hex (CoreImageHex).</para>
 <para>Warning: while processing the hex, this method (re)sets the offsets for this frame!</para>
 <para>For other renderings, use another render method.</para>
 </summary>
 <returns>Bitmap or Nothing</returns>
</member>
<member name="M:ZTStudio.ClsFrame.UpdateOffsets(System.Drawing.Point,System.Boolean)">
 <summary>
 Sets the offsets for this frame. By default, changes are applied to all frames in this graphic rather than just to one frame.
 </summary>
 <param name="PntCoordOffsetChanges">Contains offset values</param>
 <param name="BlnBatchFix">Fix all frames at once (is batch operation)</param>
</member>
<member name="M:ZTStudio.ClsFrame.UpdateIndex(System.Int32,ZTStudio.ClsFrame,ZTStudio.ClsGraphic)">
 <summary>
 Moves frame to a different position
 </summary>
 <remarks>
 No longer in use, but still kept just in case.
 </remarks>
 <param name="IntNewIndex">Integer</param>
 <param name="ZtFrame">ClsFrame. Defaults to editorFrame</param>
 <param name="ZtGraphic">ClsGraphic. Defaults to editorGraphic</param>
</member>
<member name="M:ZTStudio.ClsFrame.LoadPNG(System.String)">
 <summary>
 Loads a .PNG file and converts it to HEX.
 </summary>
 <param name="StrFileName">File name of PNG to load</param>
</member>
<member name="M:ZTStudio.ClsFrame.BitMapToHex(System.Drawing.Bitmap)">
 <summary>
 Converts a bitmap to hex values. Important: offsets should have been set already!
 </summary>
 <remarks>
 In the past, an alternative method using LockBits was implemented to find the defining rectangle.
 According to the comments, it was much faster than the old method.
 Could this also be applied here?
 </remarks>
 <param name="BmImage">Bitmap. Defaults to CoreImageBitmap</param>
 <returns>List(Of String) - Hex values for the ZT1 rendering engine (single frame)</returns>
</member>
<member name="M:ZTStudio.ClsFrame.SavePNG(System.String)">
 <summary>
 Saves the frame of a ZT1 Graphic to a .PNG file
 </summary>
 <param name="StrFileName">Destination filename</param>
</member>
<member name="T:ZTStudio.ClsGraphic">
 <summary>
 Class to handle the main graphic, which consist of one or multiple frames which share the same color palette.
 </summary>
</member>
<member name="P:ZTStudio.ClsGraphic.FileName">
 <summary>
 Filename of the ZT1 Graphic. Contrary to a regular filename, it has no file extension.
 </summary>
 <returns>String</returns>
</member>
<member name="P:ZTStudio.ClsGraphic.ColorPalette">
 <summary>
 The color palette used in this graphic and shared among its frames.
 </summary>
 <returns>ClsPalette - color palette</returns>
</member>
<member name="P:ZTStudio.ClsGraphic.Frames">
 <summary>
 Array of frames (ClsFrame) in this graphic. Includes background frame (as last frame), if present.
 </summary>
 <returns>List(Of ClsFrame) - list of ZT1 frames</returns>
</member>
<member name="P:ZTStudio.ClsGraphic.AnimationSpeed">
 <summary>
 Animation speed of the frame, in milliseconds. How much time passes before the next frame is shown?
 </summary>
 <returns>Integer - number of milli seconds</returns>
</member>
<member name="P:ZTStudio.ClsGraphic.HasBackgroundFrame">
 <summary>
 <para>Whether this graphic contains an extra background frame.</para>
 <para>In some cases, such as the Restaurant, only changing pixels are in the regular set of frames. The last frame is always rendered as a background in this case.</para>
 </summary>
 <returns></returns>
 <remarks>Kept as a byte for calculations</remarks>
</member>
<member name="P:ZTStudio.ClsGraphic.LastUpdated">
 <summary>
 Timestamp of last update.
 </summary>
 <returns></returns>
</member>
<member name="M:ZTStudio.ClsGraphic.Read(System.String)">
 <summary>
 Reads the graphic (from a file)
 </summary>
 <param name="StrFileName">Source file name</param>
</member>
<member name="M:ZTStudio.ClsGraphic.Write(System.String,System.Boolean)">
 <summary>
 Writing/saving a ZT1 Graphic File
 </summary>
 <param name="StrFileName">Destination file name</param>
 <param name="BlnOverwrite">Overwrite without warning</param>
</member>
<member name="E:ZTStudio.ClsGraphic.PropertyChanged">
 <summary>
 Just an event
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:ZTStudio.ClsGraphic.NotifyPropertyChanged(System.String)">
 <summary>
 Some updates to the graphic object should result in an update of displayed information.
 </summary>
 <param name="StrProperty"></param>
</member>
<member name="M:ZTStudio.ClsGraphic.#ctor(ZTStudio.ClsPalette)">
 <summary>
 On initializing, set parent of color palette
 </summary>
</member>
<member name="M:ZTStudio.ClsGraphic.WriteInfo">
 <summary>
 Experimental method. Writes info about graphic and each frame to a .nfo file (same name as graphic).
 To be used for re-importing (keeping correct offsets), perhaps discovering mystery bytes etc.
 </summary>
</member>
<member name="T:ZTStudio.List`1">
 <summary>
 List class. Originally contained an additional BlnForceUpdateInfo Parameter on most main methods, but the function has been deprecated.
 Since it may be useful however, it has not been removed as of now.
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="M:ZTStudio.List`1.Add(`0,System.Boolean)">
 <summary>
 Implements a custom parameter. Deprecated?
 </summary>
 <param name="Item"></param>
 <param name="BlnForceUpdateInfo"></param>
</member>
<member name="M:ZTStudio.List`1.AddRange(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
 <summary>
 Implements a custom parameter. Deprecated?
 </summary>
 <param name="Range"></param>
 <param name="BlnForceUpdateInfo"></param>
</member>
<member name="M:ZTStudio.List`1.Insert(System.Int32,`0,System.Boolean)">
 <summary>
 Implements a custom parameter. Deprecated?
 </summary>
 <param name="Index"></param>
 <param name="Item"></param>
 <param name="BlnForceUpdateInfo"></param>
</member>
<member name="M:ZTStudio.List`1.Skip(System.Int32)">
 <summary>
 Number of items to remove (from the start)
 </summary>
 <param name="IntItems">Number of items to remove (from the start)</param>
</member>
<member name="M:ZTStudio.StringExtensions.ReverseHex(System.String)">
 <summary>
 Reverse hex method to allow for easier switching around of bytes
 </summary>
 <remarks>In computing, endianness refers to the order of bytes (or sometimes bits) within a binary representation of a number</remarks>
 <param name="StrInput">String - bytes/hex values to reverse</param>
 <returns></returns>
</member>
<member name="T:ZTStudio.MdlBatch">
 <summary>
 Groups batch operations
 </summary>
</member>
<member name="M:ZTStudio.MdlBatch.WriteAniFile(System.String)">
 <summary>
 Attempts to create .ani file for each animation. Experimental.
 </summary>
 <param name="StrPath">Path to folder</param>
</member>
<member name="T:ZTStudio.MdlBitMap">
 <summary>
 Contains functions related to bitmap operations
 </summary>
</member>
<member name="M:ZTStudio.MdlBitMap.CombineImages(System.Drawing.Image,System.Drawing.Image)">
 <summary>
 Combines two images into one
 </summary>
 <param name="ImgBack">Image background</param>
 <param name="ImgFront">Image on top</param>
 <returns>Image (Bitmap)</returns>
</member>
<member name="M:ZTStudio.MdlBitMap.DrawGridFootPrintXY(System.Int32,System.Int32)">
 <summary>
 Draws an isometric grid (squares).
 </summary>
 <param name="IntFootPrintX">Sets the amount of squares (X)</param>
 <param name="IntFootPrintY">Sets the amount of squares (Y)</param>
 <returns>Bitmap of a grid</returns>
 <remarks>
 Could be simplified: IntFootPrintX and IntFootPrintY are always simply the config parameters up till now.
 However, for future use, do not change this.
 </remarks>
</member>
<member name="M:ZTStudio.MdlBitMap.DrawGridSquare(System.Drawing.Point,System.Drawing.Bitmap)">
 <summary>
 Draws a square (for a grid)
 </summary>
 <param name="CoordTopLeft">The top left coordinate</param>
 <param name="BmInput">The bitmap to drawn on. If not specified</param>
 <returns>Bitmap of a full square</returns>
</member>
<member name="M:ZTStudio.MdlBitMap.GetCroppedVersion(System.Drawing.Bitmap,System.Drawing.Rectangle)">
 <summary>
 Returns a cropped version of the given bitmap
 </summary>
 <param name="BmInput">Bitmap image</param>
 <param name="RectCropArea">Rectangle used to crop the bitmap</param>
 <returns>Bitmap</returns>
</member>
<member name="M:ZTStudio.MdlBitMap.GetDefiningRectangle(System.Drawing.Bitmap)">
 <summary>
 Returns the defining rectangle for this bitmap.
 This means the rectangle which contains all colored (non-transparent) pixels
 </summary>
 <param name="BmInput">Bitmap image</param>
 <returns>Rectangle - dimensions of relevant part</returns>
</member>
<member name="M:ZTStudio.MdlBitMap.Bitmap_GetDefiningRectangle_old(System.Drawing.Bitmap)">
 <summary>
 Deprecated! Previous version of determining the relevant rectangle.
 Only left here in case a regression is spotted.
 </summary>
 <param name="bmInput">Bitmap image</param>
 <returns>Rectangle</returns>
</member>
<member name="T:ZTStudio.MdlColorPalette">
 <summary>
 Some methods related to color palettes
 </summary>
</member>
<member name="M:ZTStudio.MdlColorPalette.ReplaceColor(System.Int32)">
 <summary>
 Replaces color (specified by index) in the main color palette
 </summary>
 <param name="IntIndex">Index of color to be replaced</param>
</member>
<member name="M:ZTStudio.MdlColorPalette.MoveColor(System.Int32,System.Int32)">
 <summary>
 Moves color in the palette to a new position.
 This has repercussions: order of colors changes, hex values (color index) need to be updated!
 </summary>
 <param name="IntIndexNow">Current index</param>
 <param name="IntIndexDest">Wanted index</param>
</member>
<member name="M:ZTStudio.MdlColorPalette.AddColor(System.Int32)">
 <summary>
 Adds a new color entry at the specified index. 
 The color hasn't been picked yet, so by default it's transparent.
 </summary>
 <param name="IntIndexNow">Index</param>
</member>
<member name="M:ZTStudio.MdlColorPalette.LoadPalette(System.String)">
 <summary>
 Opens a color palette, displays it as a separate window.
 </summary>
 <param name="StrFileName">Source filename of the ZT1 color palette (.pal)</param>
</member>
<member name="T:ZTStudio.MdlConfig">
 <summary>
 Contains methods related to ZT Studio's configuration
 </summary>
</member>
<member name="M:ZTStudio.MdlConfig.Load">
 <summary>
 Initializes the configuration settings, read from the .INI file
 </summary>
</member>
<member name="M:ZTStudio.MdlConfig.Write">
 <summary>
 Saves configuration to .INI file
 </summary>
 <returns></returns>
</member>
<member name="M:ZTStudio.MdlTasks.Save_Graphic(System.String)">
 <summary>
 Saves the main graphic as a ZT1 Graphic file.
 Saves as the specified filename.
 </summary>
 <param name="sFileName">Filename</param>
</member>
<member name="M:ZTStudio.MdlTasks.Batch_RotationFix_Folder_ZT1(System.String,System.Drawing.Point,System.Windows.Forms.ProgressBar)">
 <summary>
 Batch rotation fixes all animations in a selected folder.
 This sub will find all ZT1 Graphics in the folder and adjust the offsets of each frame.
  
 It's especially useful when importing frames from another program, such as Blender, and the user sees the animal should just be a bit more central (up/down).
 </summary>
 <param name="StrPath">Path to folder</param>
 <param name="PntOffset">The offsets to apply</param>
 <param name="ObjProgressBar">The bar which will indicate progress</param>
</member>
<member name="T:ZTStudio.ClsPalette">
 <summary>
 ClsPalette is a class to process the ZT1 Color Palette (.pal file)
 </summary>
</member>
<member name="M:ZTStudio.ClsPalette.#ctor(ZTStudio.ClsGraphic)">
 <summary>
 Creates a new instance of this class. Sets the parent graphic.
 </summary>
 <param name="ObjParent">ClsGraphic or Nothing. The parent of this color palette.</param>
</member>
<member name="P:ZTStudio.ClsPalette.Parent">
 <summary>
 The parent of this graphic. A ClsGraphic or nothing.
 </summary>
 <returns>ClsGraphic or Nothing</returns>
</member>
<member name="P:ZTStudio.ClsPalette.FileName">
 <summary>
 Filename of this color palette
 </summary>
 <returns></returns>
</member>
<member name="P:ZTStudio.ClsPalette.Colors">
 <summary>
 The color palette. Maximum 256 colors in total, the first one being a color that will be rendered entirely transparent.
 </summary>
 <returns></returns>
</member>
<member name="M:ZTStudio.ClsPalette.ReadPal(System.String)">
 <summary>
 Reads a ZT1 Color palette (.pal file).
 </summary>
 <param name="StrFileName">Optional source filename. If not specified, defaults to filename property if already set</param>
</member>
<member name="M:ZTStudio.ClsPalette.FillPaletteGrid(System.Windows.Forms.DataGridView)">
 <summary>
 Fills a datagridview with all colors. Changes the row heading to match the color. Implements some performance-boosts.
 </summary>
 <param name="ObjDataGridView">The datagridview where colors should be shown in</param>
</member>
<member name="M:ZTStudio.ClsPalette.GetColorIndex(System.Drawing.Color,System.Boolean)">
 <summary>
 Returns the index of a color within this palette.
 </summary>
 <param name="ObjColor">The color of which the index in this palette should be returned</param>
 <param name="BlnAddToPalette">Add the color to the palette if it's not present</param>
 <returns></returns>
</member>
<member name="M:ZTStudio.ClsPalette.WritePal(System.String,System.Boolean)">
 <summary>
 Writes the color palette to the specified filename.
 </summary>
 <param name="StrFileName">Destination filename. Must be specified.</param>
 <param name="BlnOverwrite">Overwrite the destination file.</param>
 <remarks>
 This sub always overwrites the destination file at this point.
 </remarks>
</member>
<member name="M:ZTStudio.ClsPalette.CombineColorPalettes(ZTStudio.List{ZTStudio.ClsPalette})">
 <summary>
 Unused function. Should be moved to a module instead.
 Was originally intended for a feature where ZT Studio would automatically improve graphics, also by combining color palettes (shared palette)
 </summary>
 <param name="LstColorPalettes">List of ClsPalette objects to combine</param>
 <returns>ObjColorPalette - a new color palette (combination of all the source palettes)</returns>
</member>
<member name="M:ZTStudio.ClsPalette.ExportToPNG(System.String)">
 <summary>
 Exports color palette to a .PNG file. Dimensions are 16x16, which leaves room for 256 colors. 
 <para>Warning: overwrites file without asking</para>
 </summary>
 <remarks>
 Recoloring is popular in ZT1 circles to create "new" animals, but they often relied on two main methods:
 * recoloring each frame individually, then re-import it into APE
 * recolor one frame which contains most colors used in the animal, then use this to replace the .pal file
 
 The idea is that the .PNG can easily be colored with any third party graphic image manipulation program (such as GIMP, but also Paint.NET, PhotoShop etc.)
 The entire palette of an existing animal can be recolored at once. And it can be reimported in a later step.
 </remarks>
 <param name="StrExportFileName">Destination file name</param>
</member>
<member name="M:ZTStudio.ClsPalette.ImportFromPNG(System.String)">
 <summary>
 Imports color palette from a specially prepared .PNG file
 </summary>
 <remarks>See ExportToPNG()</remarks>
 <param name="StrFileName">Source file name</param>
</member>
<member name="M:ZTStudio.ClsPalette.ImportFromGIMPPalette(System.String)">
 <summary>
 Import colors from a GIMP Color Palette (.gpl)
 </summary>
 <remarks>
 This is specifically developed due to the original author's preference for GIMP and since it's open source.
 It is not intended to support other file formats at this point.
 </remarks>
 <param name="StrFileName">Source filename</param>
</member>
<member name="T:ZTStudio.MdlZTStudio">
 <summary>
 Handles various tasks related to the program
 </summary>
</member>
<member name="M:ZTStudio.MdlZTStudio.StartUp">
 <summary>
 Loads settings
 Processes command line parameters
 </summary>
</member>
<member name="M:ZTStudio.MdlZTStudio.UnhandledError(System.String,System.String,Microsoft.VisualBasic.ErrObject)">
 <summary>
 To make unexpected errors look more generic, most of them are now handled by this method.
 </summary>
 <param name="StrClass">Class </param>
 <param name="StrMethod">Method</param>
 <param name="ObjError">Error object (contains number and message)</param>
</member>
<member name="M:ZTStudio.MdlZTStudio.HandledError(System.String,System.String,System.String,System.Boolean,Microsoft.VisualBasic.ErrObject)">
 <summary>
 To make expected errors look more generic, most of them are now handled by this method. Some parameters are only meant for tracing details.
 </summary>
 <param name="StrClass">Class </param>
 <param name="StrMethod">Method</param>
 <param name="StrMessage">Message</param>
 <param name="BlnFatal">Fatal error. Defaults to false.</param>
 <param name="ObjError">Error object (contains number and message). Defaults to Nothing.</param>
</member>
<member name="M:ZTStudio.MdlZTStudio.Trace(System.String,System.String,System.String)">
 <summary>
 To make tracing look more generic
 </summary>
 <param name="StrClass">Class</param>
 <param name="StrMethod">Method</param>
 <param name="StrMessage">Message</param>
</member>
<member name="M:ZTStudio.MdlZTStudio.InfoBox(System.String,System.String,System.String)">
 <summary>
 To make information message boxes more generic, most of them are now handled by this method. Some parameters are only meant for tracing details.
 </summary>
 <param name="StrClass">Class </param>
 <param name="StrMethod">Method</param>
 <param name="StrMessage">Message</param>
</member>
<member name="M:ZTStudio.MdlTests.GetHashesOfFilesInFolder(System.String,System.String)">
 <summary>
 Recursively processes all files in a folder and writes the hash files out to a .INI file
 </summary>
 <param name="StrPath">Source Folder</param>
 <param name="StrDestinationFileName">Destination file name</param>
</member>
<member name="M:ZTStudio.MdlTests.GenerateHash(System.String,System.String)">
 <summary>
 Function to obtain the desired hash of a file
 </summary>
 <param name="StrHashType">Hash type</param>
 <param name="StrFileName">Source file name</param>
 <returns></returns>
</member>
<member name="M:ZTStudio.MdlTests.PrintByteArray(System.Byte[])">
 <summary>
 Traverse the array of bytes and converting each byte in hexadecimal
 </summary>
 <param name="array">Byte array</param>
 <returns></returns>
</member>
<member name="T:ZTStudio.FrmBatchConversion">
 <summary>
 Form which briefly explains to users how to prepare files and what to expect from a batch graphic conversion.
 </summary>
</member>
<member name="M:ZTStudio.FrmBatchConversion.BtnConvert_Click(System.Object,System.EventArgs)">
 <summary>
 Handles what happens when the user clicks the Convert button.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:ZTStudio.FrmBatchOffsetFix">
 <summary>
 <para>
     Form which allows to specify offsets which are applied to all views within the selected folder.
 </para>
 <para>
     This is specifically meant for importing images from a different program, such as Blender; 
     where it is possible the animal's (Y) offset needs to be adjusted for each frame in every view.
 </para>
 </summary>
</member>
<member name="M:ZTStudio.FrmBatchOffsetFix.FrmBatchRotationFix_Load(System.Object,System.EventArgs)">
 <summary>
 Initializes window
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmBatchOffsetFix.BtnBatchOffsetting_Click(System.Object,System.EventArgs)">
 <summary>
 On click, run batch rotation fixing
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmBatchOffsetFix.BtnSelect_Click(System.Object,System.EventArgs)">
 <summary>
 On click, show folder selection dialog
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="T:ZTStudio.FrmMain">
 <summary>
 Main user interface
 </summary>
</member>
<member name="M:ZTStudio.FrmMain.Form1_Load(System.Object,System.EventArgs)">
 <summary>
 Sets some info on loading
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.PicBox_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles mouse movements. Shows
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.PicBox_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 This is unfinished, but it was meant to be a zoom function.
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TTbFrames_ValueChanged(System.Object,System.EventArgs)">
 <summary>
 Handles value changes in frame slider control.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TmrAnimation_Tick(System.Object,System.EventArgs)">
 <summary>
 If "play animation" has been checked, the timer updates the preview. Timer interval = graphic animation speed.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbCanvasBG_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to change background color
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbZT1Open_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to open ZT1 Graphic
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TbFrames_ValueChanged(System.Object,System.EventArgs)">
 <summary>
 Handles value change of trackbar (slider) and updates preview accordingly
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbAbout_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to show about info (credits, version info)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_ExportPNG_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to export frame as PNG
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbZT1_OpenPal_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to open ZT1 Color palette (.pal file)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbSettings_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to modify Settings
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbOpenPalBldg8_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
 <summary>
 Handles clicking a menu item in the list of 8-color palettes
 </summary>
 <param name="sender">Object</param>
 <param name="e">ToolStripItemClickedEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbOpenPalBldg16_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
 <summary>
 Handles clicking a menu item in the list of 16-color palettes
 </summary>
 <param name="sender">Object</param>
 <param name="e">TooLStripItemClickedEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbBatchConversion_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to start batch conversion (ZT1 Graphic - PNG)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbPreview_BGGraphic_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to pick a ZT1 Graphic to use as background
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_Add_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to add a new empty frame. (or on right click: to immediately add PNG as new frame)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_Delete_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to delete an existing frame
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_IndexIncrease_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to show the next frame
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_OffsetUp_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to move the frame contents up
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_OffsetDown_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to move the frame contents down
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_OffsetLeft_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to move the frame contents to the left
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_OffsetRight_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to move the frame contents to the right
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbGraphic_ExtraFrame_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to indicate whether this graphic has an extra frame or not
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_IndexDecrease_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to show the previous frame
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbDelete_PNG_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to delete PNG files in the root folder
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbDelete_ZT1Files_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to delete ZT1 Graphic files and color palettes in the root folder
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_fpX_SelectedIndexChanged(System.Object,System.EventArgs)">
 <summary>
 Handles footprint (X) selection change
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_fpY_SelectedIndexChanged(System.Object,System.EventArgs)">
 <summary>
 Handles footprint (Y) selection change
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.DgvPaletteMain_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
 <summary>
 Handles double clicking a color in the datagridview (color palette on the right)
 </summary>
 <param name="sender">Object</param>
 <param name="e">DataGridViewCellEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.DgvPaletteMain_CellMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
 <summary>
 Handles clicking a color in the datagridview (color palette on the right), triggers menu
 </summary>
 <param name="sender">Object</param>
 <param name="e">DataGridViewCellEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_MoveUp_Click(System.Object,System.EventArgs)">
 <summary>
 Handles clicking 'move color up' in the palette menu.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_MoveDown_Click(System.Object,System.EventArgs)">
 <summary>
 Handles clicking 'move color down' in the palette menu.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_Replace_Click(System.Object,System.EventArgs)">
 <summary>
 Handles clicking 'replace color' in the palette menu.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_MoveEnd_Click(System.Object,System.EventArgs)">
 <summary>
 Handles clicking 'move color to the end' in the palette menu.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_Add_Click(System.Object,System.EventArgs)">
 <summary>
 Handles clicking 'add color' in the palette menu.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_ImportPNG_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to import a PNG image into the current frame (or a new one if right click)
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_ExportPNG_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to import a PNG image into the current frame (or a new one if right click)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_ImportPNG_Click(System.Object,System.EventArgs)">
 <summary>
 Handles menu click to import a PNG image as a color palette
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_SavePAL_Click(System.Object,System.EventArgs)">
 <summary>
 Handles menu click to save as a ZT1 Color palette
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.MnuPal_ImportGimpPalette_Click(System.Object,System.EventArgs)">
 <summary>
 Handles menu click to import a GIMP Color Palette
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbBatchRotFix_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to batch rotation fix a set of graphics
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbZT1New_Click(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar button click to create a new ZT1 Graphic from scratch
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbZT1Write_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles toolbar button click to save as a ZT1 Graphic
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.ChkPlayAnimation_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles check change to start/stop playing animation
 </summary>
 <param name="sender">Object</param>
 <param name="e">MouseEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TVExplorer_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
 <summary>
 Handles selection of a graphic in the Explorer Pane
 </summary>
 <param name="sender">Object</param>
 <param name="e">TreeViewEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstZT1_AnimSpeed_Leave(System.Object,System.EventArgs)">
 <summary>
 Handles Leave event of toolstrip textbox animation speed. Resets animation speed textbox.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstOffsetX_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Handles confirmation of new offset (on Enter)
 </summary>
 <param name="sender">Object</param>
 <param name="e">KeyEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstOffsetY_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Handles confirmation of new offset (on Enter)
 </summary>
 <param name="sender">Object</param>
 <param name="e">KeyEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstOffsetX_Leave(System.Object,System.EventArgs)">
 <summary>
 Handles Leave event of toolstrip textbox offset X. Resets offset value in textbox.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstOffsetY_Leave(System.Object,System.EventArgs)">
 <summary>
 Handles Leave event of toolstrip textbox offset Y. Resets offset
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TstZT1_AnimSpeed_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Handles confirmation of new animation speed (on Enter)
 </summary>
 <param name="sender">Object</param>
 <param name="e">KeyEventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TsbFrame_OffsetAll_Click(System.Object,System.EventArgs)">
 <summary>
 Toggle option to enforce offsets on each frame in the loaded ZT1 Graphic
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmMain.TVExplorer_DoubleClick(System.Object,System.EventArgs)">
 <summary>
 Doubleclick on Explorer Pane may open .pal file
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="T:ZTStudio.FrmPal">
 <summary>
 Color Palette window
 </summary>
</member>
<member name="M:ZTStudio.FrmPal.BtnUseInMainPal_Click(System.Object,System.EventArgs)">
 <summary>
 Handles color replacement in main color palette (in main window). 
 This allows to quickly preview how graphics would look like too, with a different color pattern.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="T:ZTStudio.FrmSettings">
 <summary>
 Form which allows the user to change some settings.
 </summary>
</member>
<member name="M:ZTStudio.FrmSettings.FrmSettings_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
 <summary>
 On unload form, save config.
 </summary>
 <param name="sender">ObjectObjectObjectObjectObject</param>
 <param name="e">FormClosingEventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.FrmSettings_Load(System.Object,System.EventArgs)">
 <summary>
 On load form, initialize some controls to display the current configuration.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.BtnBrowse_Click(System.Object,System.EventArgs)">
 <summary>
 Button click triggers select folder dialog, so user can select root project folder
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.BtnBrowsePal8_Click(System.Object,System.EventArgs)">
 <summary>
 Button click triggers select folder dialog, so user can select a folder which contains color palettes with 8 (+1) colors in them.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.BtnBrowsePal16_Click(System.Object,System.EventArgs)">
 <summary>
 Button click triggers select folder dialog, so user can select a folder which contains color palettes with 16 (+1) colors in them.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.CboPNGExport_Crop_SelectedValueChanged(System.Object,System.EventArgs)">
 <summary>
 Handles selection of different PNG Export method
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkExportPNG_BGGraphic_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether there's a ZT1 Graphic selected which needs to be rendered as background
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.NumExportPNG_StartIndex_ValueChanged(System.Object,System.EventArgs)">
 <summary>
 Handles changes of the index numbering for PNG files
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_AddZTAFBytes_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether ZTAF bytes should always be added to the beginning of a ZT1 Graphic file on creation
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_DeleteOriginal_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether the source files should automatically be deleted after a conversion from one format to another (ZT1 - PNG)
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_Overwrite_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether files can automatically be overwritten
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkExportZT1_Ani_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether an .ani-file should be generated
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_SharedColorPalette_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether ZT Studio should try to use a shared color palette, if present, when creating ZT1 Graphics
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.TxtConvert_fileNameDelimiter_TextChanged(System.Object,System.EventArgs)">
 <summary>
 Handles changes in the file name delimiter
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkPNGTransparentBG_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether PNGs should be exported with a transparent background or the chosen background color in ZT Studio
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.NumFrameAnimSpeed_ValueChanged(System.Object,System.EventArgs)">
 <summary>
 Handles changes in the default animation speed for new graphics
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkPalImportPNGForceAddAll_CheckedChanged(System.Object,System.EventArgs)">
 <summary>
 Handles toggling of whether colors should always be added (rather than only when unique) on importing PNG files
 </summary>
 <remarks>After recolors, the palette may contain identical colors. However, hex indexes in the frame may not be updated yet!</remarks>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblRootFolder_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblColorPal8_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblColorPal16_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkRenderFrame_BGGraphic_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_DeleteOriginal_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblConvert_fileNameDelimiter_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_SharedColorPalette_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkConvert_Overwrite_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkExportZT1_AddZTAFBytes_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkExportZT1_Ani_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.ChkPNGTransparentBG_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblHowToExportPNG_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param> 
</member>
<member name="M:ZTStudio.FrmSettings.ChkPalImportPNGForceAddAll_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblExportPNG_Index_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:ZTStudio.FrmSettings.LblDefaultAnimSpeed_MouseHover(System.Object,System.EventArgs)">
 <summary>
 Show help on mousehover
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="T:ZTStudio.MdlZTStudioUI">
 <summary>
 Methods related to ZT Studio UI
 </summary>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.LoadGraphic(System.String)">
 <summary>
 Load graphic and show
 </summary>
 <param name="StrFileName">Source file name</param>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.UpdateGUI(System.String)">
 <summary>
 <para>
     Updates info in main window.
 </para>
 <para>
     Updates shown info such as animation speed, number of frames, current frame, ...
 </para>
 <para>
     Enables/disables certain controls (for example, button to render background frame)
 </para>
 </summary>
 <param name="StrReason"></param>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.UpdateExplorerPane">
 <summary>
 Updates explorer pane
 </summary>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.UpdateFrameInfo(System.String)">
 <summary>
 Updates shown info such as number of frames, current frame, ...
 </summary>
 <param name="StrReason"></param>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.UpdatePreview(System.Boolean,System.Boolean,System.Int32)">
 <summary>
 Updates all sort of info.
 </summary>
 <param name="BlnUpdateFrameInfo">Boolean. Update frame info.</param>
 <param name="BlnUpdateUI">Boolean. Update UI (buttons), animation speed, file list...).</param>
 <param name="IntIndexFrameNumber">Optional frame index number. Defaults to value of slider in main window.</param>
</member>
<member name="M:ZTStudio.MdlZTStudioUI.ShowToolTip(System.Windows.Forms.Control,System.String)">
 <summary>
 Shows tooltip when hovering above element
 </summary>
 <param name="ObjControl">Control which owns this tooltip</param>
 <param name="StrMessage">Message</param>
</member>
</members>
</doc>
